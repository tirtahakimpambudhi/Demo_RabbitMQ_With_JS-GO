name: Continuous Integration Workflow

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  test_js:
    name: Testing JavaScript
    defaults:
      run:
        shell: bash
        working-directory: ./js
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: 'Checkout repository'
      
      - uses: oven-sh/setup-bun@v1
      
      - name: Set environment variables
        run: |
          echo "APP_ENV=${{ secrets.APP_ENV }}" >> $GITHUB_ENV
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV
          echo "MESSAGE_BROKER_PROTOCOL=${{ secrets.MESSAGE_BROKER_PROTOCOL }}" >> $GITHUB_ENV
          echo "MESSAGE_BROKER_USER=${{ secrets.MESSAGE_BROKER_USER }}" >> $GITHUB_ENV
          echo "MESSAGE_BROKER_PASSWORD=${{ secrets.MESSAGE_BROKER_PASSWORD }}" >> $GITHUB_ENV
          echo "MESSAGE_BROKER_VIRTUAL_HOST=${{ secrets.MESSAGE_BROKER_VIRTUAL_HOST }}" >> $GITHUB_ENV
          echo "MESSAGE_BROKER_HOST=${{ secrets.MESSAGE_BROKER_HOST }}" >> $GITHUB_ENV
          echo "MESSAGE_BROKER_PORT=${{ secrets.MESSAGE_BROKER_PORT }}" >> $GITHUB_ENV
          echo "MESSAGE_BROKER_CLOUD=${{ secrets.MESSAGE_BROKER_CLOUD }}" >> $GITHUB_ENV
          echo "EXCHANGE_PROCESS_SERVICE=${{ secrets.EXCHANGE_PROCESS_SERVICE }}" >> $GITHUB_ENV
          echo "QUEUE_PROCESS_SERVICE=${{ secrets.QUEUE_PROCESS_SERVICE }}" >> $GITHUB_ENV
          echo "ROUTING_KEY_PROCESS_SERVICE=${{ secrets.ROUTING_KEY_PROCESS_SERVICE }}" >> $GITHUB_ENV
      
      - name: 'Install Dependencies'
        run: bun install
      - name: 'Print APP KEY'
        run: bun --print process.env
      
      - name: 'Run Tests'
        run: bun run test_ci

  lint_js:
    name: Linting JavaScript
    defaults:
      run:
        shell: bash
        working-directory: ./js
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: 'Checkout repository'
            
      - uses: oven-sh/setup-bun@v1
      
      - name: Set environment variables
        run: |
          echo "APP_ENV=${{ secrets.APP_ENV }}" >> $GITHUB_ENV
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV
          echo "MESSAGE_BROKER_PROTOCOL=${{ secrets.MESSAGE_BROKER_PROTOCOL }}" >> $GITHUB_ENV
          echo "MESSAGE_BROKER_USER=${{ secrets.MESSAGE_BROKER_USER }}" >> $GITHUB_ENV
          echo "MESSAGE_BROKER_PASSWORD=${{ secrets.MESSAGE_BROKER_PASSWORD }}" >> $GITHUB_ENV
          echo "MESSAGE_BROKER_VIRTUAL_HOST=${{ secrets.MESSAGE_BROKER_VIRTUAL_HOST }}" >> $GITHUB_ENV
          echo "MESSAGE_BROKER_HOST=${{ secrets.MESSAGE_BROKER_HOST }}" >> $GITHUB_ENV
          echo "MESSAGE_BROKER_PORT=${{ secrets.MESSAGE_BROKER_PORT }}" >> $GITHUB_ENV
          echo "MESSAGE_BROKER_CLOUD=${{ secrets.MESSAGE_BROKER_CLOUD }}" >> $GITHUB_ENV
          echo "EXCHANGE_PROCESS_SERVICE=${{ secrets.EXCHANGE_PROCESS_SERVICE }}" >> $GITHUB_ENV
          echo "QUEUE_PROCESS_SERVICE=${{ secrets.QUEUE_PROCESS_SERVICE }}" >> $GITHUB_ENV
          echo "ROUTING_KEY_PROCESS_SERVICE=${{ secrets.ROUTING_KEY_PROCESS_SERVICE }}" >> $GITHUB_ENV
      
      - name: 'Install Dependencies'
        run: bun install
          
      - name: 'Run Lint'
        run: bunx eslint .
